
Website install:
  stage: Install
  image: node:13-alpine
  cache:
    key: ${CI_COMMIT_REF_NAME}-${CI_JOB_NAME}
    paths:
      - .cache
      - node_modules
  before_script:
    - "[[ type jq ]] || apk add jq=~1"
    #
    # Remove dependencies of necessary packages
    - find packages -type d
      -maxdepth 1 | tail -n +2 | xargs -I {} sh -c
      "{ rm {}/package.json; jq 'del(.dependencies) | del(.devDependencies)' > {}/package.json; } < {}/package.json"
  script:
    - "[[ type jq ]] || apk add jq=~1"
    # NOTE(dougladuteil): remove dependencies and devDependencies
    # As we only install one package, we do not need the cross packages dependencies
    # like lerna or husky...
    - "{ rm package.json; jq 'del(.dependencies) | del(.devDependencies)' > package.json; } < package.json"
    #
    - yarn config set cache-folder $CI_PROJECT_DIR/.cache/yarn
    - yarn --frozen-lockfile
  artifacts:
    expire_in: 1 day
    paths:
      - node_modules

Website build:
  stage: Build
  needs:
    - Website install
    - Packages install
    - Packages build
  dependencies:
    - Website install
    - Packages build
  image: node:13-alpine
  cache:
    key: ${CI_COMMIT_REF_NAME}-${CI_JOB_NAME}
    paths:
      - website/.next/cache
  script:
    - yarn workspace website build
  artifacts:
    expire_in: 1 day
    paths:
      - website/.next

Website image:
  extends: .base_register_stage
  stage: Registration
  needs:
    - Website install
    - Website build
    - Packages install
    - Packages build
  needs:
    - Website build
  variables:
    CONTEXT: .
    IMAGE_NAME: $CI_REGISTRY_IMAGE/www
    DOCKER_BUILD_ARGS: "-f website/Dockerfile"
